!obj:pylearn2.train.Train
{
    dataset: &train !obj:pylearn2.scripts.med_ml.cin_feature2.CIN_FEATURE2
    {
        which_set: 'train'
    },
    model: !obj:pylearn2.models.mlp.MLP
    {
        batch_size: %(batch_size)i,
        layers:
        [
                 !obj:pylearn2.models.mlp.PretrainedLayer
                 {
                     layer_name: 'h1',
                     layer_content: !pkl: "%(save_path)s/l1_grbm.pkl"
                 },
                 !obj:pylearn2.models.mlp.Softmax
                 {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: %(n_classes)i,
                     irange: .005
                 }
        ],
        nvis: %(nvis)i
    },

    # algorithm: !obj:pylearn2.training_algorithms.sgd.SGD
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD
    {

        # learning_rate: .05,
        # learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum
        # {
        #     init_momentum: .5,
        # },

        batch_size: %(bgd_batch_size)i,
        line_search_mode: 'exhaustive',
        conjugate: 1,
        monitoring_dataset:
            {
                'valid' : !obj:pylearn2.scripts.med_ml.cin_feature2.CIN_FEATURE2
                {
                              which_set: 'test',
                },
            },
        cost: !obj:pylearn2.costs.mlp.Default {},
        termination_criterion: !obj:pylearn2.termination_criteria.And
        {
            criteria:
            [
                !obj:pylearn2.termination_criteria.MonitorBased
                {
                    channel_name: "valid_y_misclass",
                    prop_decrease: 0.,
                    N: 100
                },
                !obj:pylearn2.termination_criteria.EpochCounter
                {
                    max_epochs: %(max_epochs)i
                }
            ]
        }
#        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay
#        {
#            decay_factor: 1.00004,
#            min_lr: .000001
#        }
    },
    extensions:
    [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest
        {
            channel_name: 'valid_y_misclass',
            save_path: "%(save_path)s/dl1_best.pkl"
        },
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor
        {
            start: 1,
            saturate: 250,
            final_momentum: .7
        }
    ]
}
