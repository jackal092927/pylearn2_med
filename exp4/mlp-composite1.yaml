!obj:pylearn2.train.Train {
    dataset: &train !obj:datasets.cin_feature2_composite.CIN_FEATURE2086_2
        {
            which_set: 'train',
            foldi: %(foldi)i
        },
    model: !obj:mlp_with_source.MLPWithSource {
            batch_size: 1140,
            layers: [
                !obj:mlp_with_source.CompositeLayerWithSource {
                    layer_name: 'h0',
                    layers: [
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '850',
                             dim: %(dim_h0_850)i,
                             sparse_init: 15
                        },
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '556',
                             dim: %(dim_h0_556)i,
                             sparse_init: 15
                        },
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '680',
                             dim: %(dim_h0_680)i,
                             sparse_init: 15
                        },
                    ],
                },
                !obj:mlp_with_source.CompositeLayerWithSource
                {
                    layer_name: 'h1',
                    layers: [
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '850',
                             dim: %(dim_h0_850)i,
                             sparse_init: 15
                        },
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '556',
                             dim: %(dim_h0_556)i,
                             sparse_init: 15
                        },
                        !obj:pylearn2.models.mlp.RectifiedLinear
                        {
                             layer_name: '680',
                             dim: %(dim_h0_680)i,
                             sparse_init: 15
                        },
                    ],
                },
                !obj:softmax_composite_input.Softmax_composite_input {
                    layer_name: 'y',
                    n_classes: 2,
                    irange: 0.
                }
            ],
            input_space: !obj:pylearn2.space.CompositeSpace {
                components: [
                    !obj:pylearn2.space.VectorSpace {
                        dim: 850,
                    },
                    !obj:pylearn2.space.VectorSpace {
                        dim: 556,
                    },
                    !obj:pylearn2.space.VectorSpace {
                        dim: 680,
                    },
                ],
            },
            input_source: ['feature850', 'feature556', 'feature680'],
        },

    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD
    {
        line_search_mode: 'exhaustive',
        conjugate: 1,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:datasets.cin_feature2_composite.CIN_FEATURE2086_2
                {
                    which_set: 'valid',
                    foldi: %(foldi)i
                },
                'test'  : !obj:datasets.cin_feature2_composite.CIN_FEATURE2086_2
                {
                    which_set: 'test',
                    foldi: %(foldi)i
                },
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts
        {
            costs:
            [
                    !obj:pylearn2.costs.mlp.Default { },
                    !obj:pylearn2.costs.mlp.WeightDecay
                    {
                        coeffs:
                        [ %(wd_coeff)f , %(wd_coeff)f , %(wd_coeff)f  ]
                    }
            ]
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_y_misclass",
                    prop_decrease: 0.,
                    N: 20
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: %(max_epochs)i
                }
            ]
        }
    },
    extensions: [ !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "%(save_path)s"
        },
    ],
}
